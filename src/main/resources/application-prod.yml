server:
  port: ${SPRING_PORT}
  address: ${SPRING_HOST}

spring:
  # Setup database connection
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  # Setup hibernate
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
        jdbc:
          lob:
            non_contextual_creation: true
  # Configure exceptions and disable automatic mapping of resources
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  # Setup kafka
  kafka:
    bootstrap-servers: ${KAFKA_HOST}
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: ${KAFKA_GROUP_ID}
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

management:
  endpoints:
    web:
      base-path: '/metrics'
      exposure:
        include: "prometheus"
    enabled-by-default: false
  endpoint:
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: Project-Management-Service

springfox:
  # Configure swagger to listen on /docs/ instead of /v2/api-docs
  documentation:
    swagger:
      v2:
        path: '/docs/'